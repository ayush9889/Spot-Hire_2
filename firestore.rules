rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false; // Don't allow user deletion
    }
    
    // Jobs collection
    match /jobs/{jobId} {
      allow read: if true; // Anyone can read job listings
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.employer_id;
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.employer_id;
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.employer_id;
    }
    
    // Applications collection
    match /applications/{applicationId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.jobseeker_id || 
         request.auth.uid == get(/databases/$(database)/documents/jobs/$(resource.data.job_id)).data.employer_id);
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.jobseeker_id;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.jobseeker_id || 
         request.auth.uid == get(/databases/$(database)/documents/jobs/$(resource.data.job_id)).data.employer_id);
      allow delete: if false;
    }
    
    // Transactions collection (for coin transactions)
    match /transactions/{transactionId} {
      allow read: if request.auth != null && 
        request.auth.uid == resource.data.user_id;
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.user_id;
      allow update: if false;
      allow delete: if false;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 